version: '3.8'

services:
  agent-scrivener:
    build:
      context: ../..
      dockerfile: agent_scrivener/deployment/Dockerfile
    container_name: agent-scrivener-api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - BEDROCK_MODEL_ID=${BEDROCK_MODEL_ID:-anthropic.claude-3-sonnet-20240229-v1:0}
      - MAX_CONCURRENT_SESSIONS=${MAX_CONCURRENT_SESSIONS:-10}
      - SESSION_TIMEOUT_MINUTES=${SESSION_TIMEOUT_MINUTES:-480}
      - MEMORY_STORE_TYPE=${MEMORY_STORE_TYPE:-local}
    env_file:
      - .env
    volumes:
      - agent_data:/app/data
      - agent_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - agent-network

  redis:
    image: redis:7-alpine
    container_name: agent-scrivener-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - agent-network
    command: redis-server --appendonly yes

volumes:
  agent_data:
  agent_logs:
  redis_data:

networks:
  agent-network:
    driver: bridge